
Assume there are three Spotify tables containing information about the artists, songs, and music charts. Write a query to determine the top 5 artists whose songs appear in the Top 10 of the global_song_rank table the highest number of times. From now on, we'll refer to this ranking number as "song appearances". 
  
 Output the top 5 artist names in ascending order along with their song appearances ranking (not the number of song appearances, but the rank of who has the most appearances). The order of the rank should take precedence. 
  
 For example, Ed Sheeran's songs appeared 5 times in Top 10 list of the global song rank table; this is the highest number of appearances, so he is ranked 1st. Bad Bunny's songs appeared in the list 4, so he comes in at a close 2nd. 
  
  
 Answer: 
  
 with top_artists as( 
 select artist_id, dense_rank() over(order by song_count desc) as artist_rank 
 from( 
 SELECT  
   songs.artist_id, 
   COUNT(songs.song_id) AS song_count 
 FROM songs 
 INNER JOIN global_song_rank AS ranking 
   ON songs.song_id = ranking.song_id 
 WHERE ranking.rank <= 10 
 GROUP BY songs.artist_id) as top_songs)  
  
 select artists.artist_name, top_artists.artist_rank from top_artists 
 inner join artists on top_artists.artist_id = artists.artist_id 
 where top_artists.artist_rank <=5 order by top_artists.artist_rank, artists.artist_name; 
  
 Explaination: 1. get the songs details by getting the artists id having highest song count (join between songs and global_song_ranking) use this as table top_songs 
               2. using dense_rank get the artists id arranged in descending order based on their songs count(get this information from the table created above in step 1 top_songs. 
               3. Use the 2nd query as CTE named as top_artists and get the desired output.